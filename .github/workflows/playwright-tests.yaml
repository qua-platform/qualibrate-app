# CI configuration for Playwright with Python and Qualibrate setup
name: Playwright Tests

on:
  push:
    branches:
      - main
      - integration
  pull_request:
    branches:
      - main
      - integration

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Install Python and Create Environment
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m venv .venv
        source .venv/bin/activate
        pip install --upgrade pip
        pip install qualibrate             # Install Qualibrate package
        pip install quam                   # Install Quam package
        # pip install quam_libs            # Install Quam libraries
        # pip install quam_libs.components # Install Quam components

    - name: Create Qualibrate Configuration
      run: |
        source .venv/bin/activate
        qualibrate config --auto-accept

    - name: Install Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Install Playwright Dependencies
      working-directory: ./frontend/tests # Set working directory
      run: |
        npm install
        npx playwright install --with-deps

    # - name: Run Playwright Tests
    #   working-directory: ./frontend/tests # Set working directory
    #   run: |
    #     ../../../.venv/bin/python -m playwright test --config=playwright.config.ts

    - name: Run Playwright Tests (Workflow 1)
      working-directory: ./frontend/tests/e2e
      run: |
        . ../../../.venv/bin/activate  # POSIX-compliant activation
        qualibrate start &
        npx playwright test e2e/workflow1.test.ts

    - name: Run Playwright Tests (Workflow 2)
      working-directory: ./frontend/tests/e2e
      run: |
        . ../../../.venv/bin/activate  # POSIX-compliant activation
        qualibrate start &
        npx playwright test e2e/workflow2.test.ts

    # - name: Run Playwright Tests (Workflow 2)
    #   working-directory: ./frontend/tests/e2e
    #   run: npm run test:workflow2